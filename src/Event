import java.util.*;

public class Event {
	private final UUID id;
    private final String title;
    private final String description;
    private final List<Person> attenders;
    private final String startDate;
    private final String endDate;
    
    private Event(Builder builder) {
        this.id = builder.id;
        this.title = builder.title;
        this.description = builder.description;
        this.attenders = builder.attenders;
        this.startDate = builder.startDate;
        this.endDate = builder.endDate;
    }

	public final UUID getId() {
		return id;
	}

	public final String getSummary() {
		return title;
	}

	public final String getDescription() {
		return description;
	}

	public final List<Person> getAttenders() {
		return attenders;
	}

	public final String getStartDate() {
		return startDate;
	}

	public final String getEndDate() {
		return endDate;
	}

	@Override
	public String toString() {
		return "Event [id=" + id + ", summary=" + title + ", description="
				+ description + ", attenders=" + attenders + ", startDate="
				+ startDate + ", endDate=" + endDate + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((attenders == null) ? 0 : attenders.hashCode());
		result = prime * result
				+ ((description == null) ? 0 : description.hashCode());
		result = prime * result + ((endDate == null) ? 0 : endDate.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((startDate == null) ? 0 : startDate.hashCode());
		result = prime * result + ((title == null) ? 0 : title.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Event other = (Event) obj;
		if (attenders == null) {
			if (other.attenders != null)
				return false;
		} else if (!attenders.equals(other.attenders))
			return false;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (endDate == null) {
			if (other.endDate != null)
				return false;
		} else if (!endDate.equals(other.endDate))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (startDate == null) {
			if (other.startDate != null)
				return false;
		} else if (!startDate.equals(other.startDate))
			return false;
		if (title == null) {
			if (other.title != null)
				return false;
		} else if (!title.equals(other.title))
			return false;
		return true;
	}
    
    
	  public static class Builder {
	        private UUID id;
	        private String title;
	        private String description;
	        private List<Person> attenders;
	        private String startDate;
	        private String endDate;

	        public Builder() {
	        }

	        public Builder(Event event) {
	            this.id = event.id;
	            this.title = event.title;
	            this.description = event.description;
	            this.attenders = event.attenders;
	            this.startDate = event.startDate;
	            this.endDate = event.endDate;
	        }

	        public Builder setId(UUID id) {
	            this.id = id;
	            return this;
	        }

	        public Builder setTitle(String title) {
	            this.title = title;
	            return this;
	        }

	        public Builder setDescription(String description) {
	            this.description = description;
	            return this;
	        }

	        public Builder setAttenders(List<Person> attenders) {
	            this.attenders = attenders;
	            return this;
	        }

	        public Builder setStartDate(String startDate) {
	            this.startDate = startDate;
	            return this;
	        }

	        public Builder setFinishDate(String endDate) {
	            this.endDate = endDate;
	            return this;
	        }

	        public Event build() {
	            return new Event(this);
	        }
		}
}
